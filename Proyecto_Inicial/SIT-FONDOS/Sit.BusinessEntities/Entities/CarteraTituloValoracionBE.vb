'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class CarteraTituloValoracionBE
    Inherits DataSet
    
    Private tableCarteraTituloValoracion As CarteraTituloValoracionDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CarteraTituloValoracion")) Is Nothing) Then
                Me.Tables.Add(New CarteraTituloValoracionDataTable(ds.Tables("CarteraTituloValoracion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CarteraTituloValoracion As CarteraTituloValoracionDataTable
        Get
            Return Me.tableCarteraTituloValoracion
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As CarteraTituloValoracionBE = CType(MyBase.Clone,CarteraTituloValoracionBE)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("CarteraTituloValoracion")) Is Nothing) Then
            Me.Tables.Add(New CarteraTituloValoracionDataTable(ds.Tables("CarteraTituloValoracion")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableCarteraTituloValoracion = CType(Me.Tables("CarteraTituloValoracion"),CarteraTituloValoracionDataTable)
        If (Not (Me.tableCarteraTituloValoracion) Is Nothing) Then
            Me.tableCarteraTituloValoracion.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "CarteraTituloValoracionBE"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/CarteraTituloValoracionBE.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableCarteraTituloValoracion = New CarteraTituloValoracionDataTable
        Me.Tables.Add(Me.tableCarteraTituloValoracion)
    End Sub
    
    Private Function ShouldSerializeCarteraTituloValoracion() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub CarteraTituloValoracionRowChangeEventHandler(ByVal sender As Object, ByVal e As CarteraTituloValoracionRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CarteraTituloValoracionDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnEscenario As DataColumn
        
        Private columnCodigoPortafolioSBS As DataColumn
        
        Private columnFechaValoracion As DataColumn
        
        Private columnNumeroTitulo As DataColumn
        
        Private columnSecuenciaValorizacion As DataColumn
        
        Private columnValorCausadoOriginal As DataColumn
        
        Private columnValorCausadoLocal As DataColumn
        
        Private columnVPNOriginal As DataColumn
        
        Private columnVPNLocal As DataColumn
        
        Private columnEstado As DataColumn
        
        Private columnIndicaContabilidad As DataColumn
        
        Private columnValorTIROriginal As DataColumn
        
        Private columnValorTIRLocal As DataColumn
        
        Private columnValorTIR360 As DataColumn
        
        Private columnDuracionSuperBancaria As DataColumn
        
        Private columnDuracionHeinsohn As DataColumn
        
        Private columnValorUnidad As DataColumn
        
        Private columnCantidad As DataColumn
        
        Private columnDuracionModificada As DataColumn
        
        Private columnConvexidad As DataColumn
        
        Private columnEstadoValoracion As DataColumn
        
        Private columnValorInteresesOriginal As DataColumn
        
        Private columnValorInteresesLocal As DataColumn
        
        Private columnMargen As DataColumn
        
        Private columnValorNominalMonedaOrigen As DataColumn
        
        Private columnValorNominalMonedaLocal As DataColumn
        
        Private columnTIR360 As DataColumn
        
        Private columnTasaEfectivaDiaria As DataColumn
        
        Private columnInteresesCorridos As DataColumn
        
        Private columnMetodoValoracion As DataColumn
        
        Private columnUsuarioCreacion As DataColumn
        
        Private columnFechaCreacion As DataColumn
        
        Private columnHoraCreacion As DataColumn
        
        Private columnHost As DataColumn
        
        Private columnNumeroAsiento As DataColumn
        
        Private columnFechaAsiento As DataColumn
        
        Private columnCodigoMnemonico As DataColumn
        
        Private columnSituacion As DataColumn
        
        Friend Sub New()
            MyBase.New("CarteraTituloValoracion")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property EscenarioColumn As DataColumn
            Get
                Return Me.columnEscenario
            End Get
        End Property
        
        Friend ReadOnly Property CodigoPortafolioSBSColumn As DataColumn
            Get
                Return Me.columnCodigoPortafolioSBS
            End Get
        End Property
        
        Friend ReadOnly Property FechaValoracionColumn As DataColumn
            Get
                Return Me.columnFechaValoracion
            End Get
        End Property
        
        Friend ReadOnly Property NumeroTituloColumn As DataColumn
            Get
                Return Me.columnNumeroTitulo
            End Get
        End Property
        
        Friend ReadOnly Property SecuenciaValorizacionColumn As DataColumn
            Get
                Return Me.columnSecuenciaValorizacion
            End Get
        End Property
        
        Friend ReadOnly Property ValorCausadoOriginalColumn As DataColumn
            Get
                Return Me.columnValorCausadoOriginal
            End Get
        End Property
        
        Friend ReadOnly Property ValorCausadoLocalColumn As DataColumn
            Get
                Return Me.columnValorCausadoLocal
            End Get
        End Property
        
        Friend ReadOnly Property VPNOriginalColumn As DataColumn
            Get
                Return Me.columnVPNOriginal
            End Get
        End Property
        
        Friend ReadOnly Property VPNLocalColumn As DataColumn
            Get
                Return Me.columnVPNLocal
            End Get
        End Property
        
        Friend ReadOnly Property EstadoColumn As DataColumn
            Get
                Return Me.columnEstado
            End Get
        End Property
        
        Friend ReadOnly Property IndicaContabilidadColumn As DataColumn
            Get
                Return Me.columnIndicaContabilidad
            End Get
        End Property
        
        Friend ReadOnly Property ValorTIROriginalColumn As DataColumn
            Get
                Return Me.columnValorTIROriginal
            End Get
        End Property
        
        Friend ReadOnly Property ValorTIRLocalColumn As DataColumn
            Get
                Return Me.columnValorTIRLocal
            End Get
        End Property
        
        Friend ReadOnly Property ValorTIR360Column As DataColumn
            Get
                Return Me.columnValorTIR360
            End Get
        End Property
        
        Friend ReadOnly Property DuracionSuperBancariaColumn As DataColumn
            Get
                Return Me.columnDuracionSuperBancaria
            End Get
        End Property
        
        Friend ReadOnly Property DuracionHeinsohnColumn As DataColumn
            Get
                Return Me.columnDuracionHeinsohn
            End Get
        End Property
        
        Friend ReadOnly Property ValorUnidadColumn As DataColumn
            Get
                Return Me.columnValorUnidad
            End Get
        End Property
        
        Friend ReadOnly Property CantidadColumn As DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        Friend ReadOnly Property DuracionModificadaColumn As DataColumn
            Get
                Return Me.columnDuracionModificada
            End Get
        End Property
        
        Friend ReadOnly Property ConvexidadColumn As DataColumn
            Get
                Return Me.columnConvexidad
            End Get
        End Property
        
        Friend ReadOnly Property EstadoValoracionColumn As DataColumn
            Get
                Return Me.columnEstadoValoracion
            End Get
        End Property
        
        Friend ReadOnly Property ValorInteresesOriginalColumn As DataColumn
            Get
                Return Me.columnValorInteresesOriginal
            End Get
        End Property
        
        Friend ReadOnly Property ValorInteresesLocalColumn As DataColumn
            Get
                Return Me.columnValorInteresesLocal
            End Get
        End Property
        
        Friend ReadOnly Property MargenColumn As DataColumn
            Get
                Return Me.columnMargen
            End Get
        End Property
        
        Friend ReadOnly Property ValorNominalMonedaOrigenColumn As DataColumn
            Get
                Return Me.columnValorNominalMonedaOrigen
            End Get
        End Property
        
        Friend ReadOnly Property ValorNominalMonedaLocalColumn As DataColumn
            Get
                Return Me.columnValorNominalMonedaLocal
            End Get
        End Property
        
        Friend ReadOnly Property TIR360Column As DataColumn
            Get
                Return Me.columnTIR360
            End Get
        End Property
        
        Friend ReadOnly Property TasaEfectivaDiariaColumn As DataColumn
            Get
                Return Me.columnTasaEfectivaDiaria
            End Get
        End Property
        
        Friend ReadOnly Property InteresesCorridosColumn As DataColumn
            Get
                Return Me.columnInteresesCorridos
            End Get
        End Property
        
        Friend ReadOnly Property MetodoValoracionColumn As DataColumn
            Get
                Return Me.columnMetodoValoracion
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioCreacionColumn As DataColumn
            Get
                Return Me.columnUsuarioCreacion
            End Get
        End Property
        
        Friend ReadOnly Property FechaCreacionColumn As DataColumn
            Get
                Return Me.columnFechaCreacion
            End Get
        End Property
        
        Friend ReadOnly Property HoraCreacionColumn As DataColumn
            Get
                Return Me.columnHoraCreacion
            End Get
        End Property
        
        Friend ReadOnly Property HostColumn As DataColumn
            Get
                Return Me.columnHost
            End Get
        End Property
        
        Friend ReadOnly Property NumeroAsientoColumn As DataColumn
            Get
                Return Me.columnNumeroAsiento
            End Get
        End Property
        
        Friend ReadOnly Property FechaAsientoColumn As DataColumn
            Get
                Return Me.columnFechaAsiento
            End Get
        End Property
        
        Friend ReadOnly Property CodigoMnemonicoColumn As DataColumn
            Get
                Return Me.columnCodigoMnemonico
            End Get
        End Property
        
        Friend ReadOnly Property SituacionColumn As DataColumn
            Get
                Return Me.columnSituacion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CarteraTituloValoracionRow
            Get
                Return CType(Me.Rows(index),CarteraTituloValoracionRow)
            End Get
        End Property
        
        Public Event CarteraTituloValoracionRowChanged As CarteraTituloValoracionRowChangeEventHandler
        
        Public Event CarteraTituloValoracionRowChanging As CarteraTituloValoracionRowChangeEventHandler
        
        Public Event CarteraTituloValoracionRowDeleted As CarteraTituloValoracionRowChangeEventHandler
        
        Public Event CarteraTituloValoracionRowDeleting As CarteraTituloValoracionRowChangeEventHandler
        
        Public Overloads Sub AddCarteraTituloValoracionRow(ByVal row As CarteraTituloValoracionRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCarteraTituloValoracionRow( _
                    ByVal Escenario As String,  _
                    ByVal CodigoPortafolioSBS As String,  _
                    ByVal FechaValoracion As Decimal,  _
                    ByVal NumeroTitulo As Decimal,  _
                    ByVal SecuenciaValorizacion As Decimal,  _
                    ByVal ValorCausadoOriginal As Decimal,  _
                    ByVal ValorCausadoLocal As Decimal,  _
                    ByVal VPNOriginal As Decimal,  _
                    ByVal VPNLocal As Decimal,  _
                    ByVal Estado As String,  _
                    ByVal IndicaContabilidad As String,  _
                    ByVal ValorTIROriginal As Decimal,  _
                    ByVal ValorTIRLocal As Decimal,  _
                    ByVal ValorTIR360 As Decimal,  _
                    ByVal DuracionSuperBancaria As Decimal,  _
                    ByVal DuracionHeinsohn As Decimal,  _
                    ByVal ValorUnidad As Decimal,  _
                    ByVal Cantidad As Decimal,  _
                    ByVal DuracionModificada As Decimal,  _
                    ByVal Convexidad As Decimal,  _
                    ByVal EstadoValoracion As String,  _
                    ByVal ValorInteresesOriginal As Decimal,  _
                    ByVal ValorInteresesLocal As Decimal,  _
                    ByVal Margen As Decimal,  _
                    ByVal ValorNominalMonedaOrigen As Decimal,  _
                    ByVal ValorNominalMonedaLocal As Decimal,  _
                    ByVal TIR360 As Decimal,  _
                    ByVal TasaEfectivaDiaria As Decimal,  _
                    ByVal InteresesCorridos As Decimal,  _
                    ByVal MetodoValoracion As String,  _
                    ByVal UsuarioCreacion As String,  _
                    ByVal FechaCreacion As Decimal,  _
                    ByVal HoraCreacion As String,  _
                    ByVal Host As String,  _
                    ByVal NumeroAsiento As String,  _
                    ByVal FechaAsiento As Decimal,  _
                    ByVal CodigoMnemonico As String,  _
                    ByVal Situacion As String) As CarteraTituloValoracionRow
            Dim rowCarteraTituloValoracionRow As CarteraTituloValoracionRow = CType(Me.NewRow,CarteraTituloValoracionRow)
            rowCarteraTituloValoracionRow.ItemArray = New Object() {Escenario, CodigoPortafolioSBS, FechaValoracion, NumeroTitulo, SecuenciaValorizacion, ValorCausadoOriginal, ValorCausadoLocal, VPNOriginal, VPNLocal, Estado, IndicaContabilidad, ValorTIROriginal, ValorTIRLocal, ValorTIR360, DuracionSuperBancaria, DuracionHeinsohn, ValorUnidad, Cantidad, DuracionModificada, Convexidad, EstadoValoracion, ValorInteresesOriginal, ValorInteresesLocal, Margen, ValorNominalMonedaOrigen, ValorNominalMonedaLocal, TIR360, TasaEfectivaDiaria, InteresesCorridos, MetodoValoracion, UsuarioCreacion, FechaCreacion, HoraCreacion, Host, NumeroAsiento, FechaAsiento, CodigoMnemonico, Situacion}
            Me.Rows.Add(rowCarteraTituloValoracionRow)
            Return rowCarteraTituloValoracionRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CarteraTituloValoracionDataTable = CType(MyBase.Clone,CarteraTituloValoracionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CarteraTituloValoracionDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnEscenario = Me.Columns("Escenario")
            Me.columnCodigoPortafolioSBS = Me.Columns("CodigoPortafolioSBS")
            Me.columnFechaValoracion = Me.Columns("FechaValoracion")
            Me.columnNumeroTitulo = Me.Columns("NumeroTitulo")
            Me.columnSecuenciaValorizacion = Me.Columns("SecuenciaValorizacion")
            Me.columnValorCausadoOriginal = Me.Columns("ValorCausadoOriginal")
            Me.columnValorCausadoLocal = Me.Columns("ValorCausadoLocal")
            Me.columnVPNOriginal = Me.Columns("VPNOriginal")
            Me.columnVPNLocal = Me.Columns("VPNLocal")
            Me.columnEstado = Me.Columns("Estado")
            Me.columnIndicaContabilidad = Me.Columns("IndicaContabilidad")
            Me.columnValorTIROriginal = Me.Columns("ValorTIROriginal")
            Me.columnValorTIRLocal = Me.Columns("ValorTIRLocal")
            Me.columnValorTIR360 = Me.Columns("ValorTIR360")
            Me.columnDuracionSuperBancaria = Me.Columns("DuracionSuperBancaria")
            Me.columnDuracionHeinsohn = Me.Columns("DuracionHeinsohn")
            Me.columnValorUnidad = Me.Columns("ValorUnidad")
            Me.columnCantidad = Me.Columns("Cantidad")
            Me.columnDuracionModificada = Me.Columns("DuracionModificada")
            Me.columnConvexidad = Me.Columns("Convexidad")
            Me.columnEstadoValoracion = Me.Columns("EstadoValoracion")
            Me.columnValorInteresesOriginal = Me.Columns("ValorInteresesOriginal")
            Me.columnValorInteresesLocal = Me.Columns("ValorInteresesLocal")
            Me.columnMargen = Me.Columns("Margen")
            Me.columnValorNominalMonedaOrigen = Me.Columns("ValorNominalMonedaOrigen")
            Me.columnValorNominalMonedaLocal = Me.Columns("ValorNominalMonedaLocal")
            Me.columnTIR360 = Me.Columns("TIR360")
            Me.columnTasaEfectivaDiaria = Me.Columns("TasaEfectivaDiaria")
            Me.columnInteresesCorridos = Me.Columns("InteresesCorridos")
            Me.columnMetodoValoracion = Me.Columns("MetodoValoracion")
            Me.columnUsuarioCreacion = Me.Columns("UsuarioCreacion")
            Me.columnFechaCreacion = Me.Columns("FechaCreacion")
            Me.columnHoraCreacion = Me.Columns("HoraCreacion")
            Me.columnHost = Me.Columns("Host")
            Me.columnNumeroAsiento = Me.Columns("NumeroAsiento")
            Me.columnFechaAsiento = Me.Columns("FechaAsiento")
            Me.columnCodigoMnemonico = Me.Columns("CodigoMnemonico")
            Me.columnSituacion = Me.Columns("Situacion")
        End Sub
        
        Private Sub InitClass()
            Me.columnEscenario = New DataColumn("Escenario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEscenario)
            Me.columnCodigoPortafolioSBS = New DataColumn("CodigoPortafolioSBS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodigoPortafolioSBS)
            Me.columnFechaValoracion = New DataColumn("FechaValoracion", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaValoracion)
            Me.columnNumeroTitulo = New DataColumn("NumeroTitulo", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumeroTitulo)
            Me.columnSecuenciaValorizacion = New DataColumn("SecuenciaValorizacion", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSecuenciaValorizacion)
            Me.columnValorCausadoOriginal = New DataColumn("ValorCausadoOriginal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorCausadoOriginal)
            Me.columnValorCausadoLocal = New DataColumn("ValorCausadoLocal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorCausadoLocal)
            Me.columnVPNOriginal = New DataColumn("VPNOriginal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVPNOriginal)
            Me.columnVPNLocal = New DataColumn("VPNLocal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVPNLocal)
            Me.columnEstado = New DataColumn("Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstado)
            Me.columnIndicaContabilidad = New DataColumn("IndicaContabilidad", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIndicaContabilidad)
            Me.columnValorTIROriginal = New DataColumn("ValorTIROriginal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorTIROriginal)
            Me.columnValorTIRLocal = New DataColumn("ValorTIRLocal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorTIRLocal)
            Me.columnValorTIR360 = New DataColumn("ValorTIR360", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorTIR360)
            Me.columnDuracionSuperBancaria = New DataColumn("DuracionSuperBancaria", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDuracionSuperBancaria)
            Me.columnDuracionHeinsohn = New DataColumn("DuracionHeinsohn", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDuracionHeinsohn)
            Me.columnValorUnidad = New DataColumn("ValorUnidad", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorUnidad)
            Me.columnCantidad = New DataColumn("Cantidad", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCantidad)
            Me.columnDuracionModificada = New DataColumn("DuracionModificada", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDuracionModificada)
            Me.columnConvexidad = New DataColumn("Convexidad", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnConvexidad)
            Me.columnEstadoValoracion = New DataColumn("EstadoValoracion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstadoValoracion)
            Me.columnValorInteresesOriginal = New DataColumn("ValorInteresesOriginal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorInteresesOriginal)
            Me.columnValorInteresesLocal = New DataColumn("ValorInteresesLocal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorInteresesLocal)
            Me.columnMargen = New DataColumn("Margen", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMargen)
            Me.columnValorNominalMonedaOrigen = New DataColumn("ValorNominalMonedaOrigen", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorNominalMonedaOrigen)
            Me.columnValorNominalMonedaLocal = New DataColumn("ValorNominalMonedaLocal", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorNominalMonedaLocal)
            Me.columnTIR360 = New DataColumn("TIR360", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTIR360)
            Me.columnTasaEfectivaDiaria = New DataColumn("TasaEfectivaDiaria", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaEfectivaDiaria)
            Me.columnInteresesCorridos = New DataColumn("InteresesCorridos", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInteresesCorridos)
            Me.columnMetodoValoracion = New DataColumn("MetodoValoracion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMetodoValoracion)
            Me.columnUsuarioCreacion = New DataColumn("UsuarioCreacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuarioCreacion)
            Me.columnFechaCreacion = New DataColumn("FechaCreacion", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaCreacion)
            Me.columnHoraCreacion = New DataColumn("HoraCreacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHoraCreacion)
            Me.columnHost = New DataColumn("Host", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHost)
            Me.columnNumeroAsiento = New DataColumn("NumeroAsiento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumeroAsiento)
            Me.columnFechaAsiento = New DataColumn("FechaAsiento", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaAsiento)
            Me.columnCodigoMnemonico = New DataColumn("CodigoMnemonico", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodigoMnemonico)
            Me.columnSituacion = New DataColumn("Situacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSituacion)
            Me.columnEscenario.AllowDBNull = false
            Me.columnCodigoPortafolioSBS.AllowDBNull = false
            Me.columnFechaValoracion.AllowDBNull = false
            Me.columnNumeroTitulo.AllowDBNull = false
            Me.columnSecuenciaValorizacion.AllowDBNull = false
        End Sub
        
        Public Function NewCarteraTituloValoracionRow() As CarteraTituloValoracionRow
            Return CType(Me.NewRow,CarteraTituloValoracionRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CarteraTituloValoracionRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CarteraTituloValoracionRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CarteraTituloValoracionRowChangedEvent) Is Nothing) Then
                RaiseEvent CarteraTituloValoracionRowChanged(Me, New CarteraTituloValoracionRowChangeEvent(CType(e.Row,CarteraTituloValoracionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CarteraTituloValoracionRowChangingEvent) Is Nothing) Then
                RaiseEvent CarteraTituloValoracionRowChanging(Me, New CarteraTituloValoracionRowChangeEvent(CType(e.Row,CarteraTituloValoracionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CarteraTituloValoracionRowDeletedEvent) Is Nothing) Then
                RaiseEvent CarteraTituloValoracionRowDeleted(Me, New CarteraTituloValoracionRowChangeEvent(CType(e.Row,CarteraTituloValoracionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CarteraTituloValoracionRowDeletingEvent) Is Nothing) Then
                RaiseEvent CarteraTituloValoracionRowDeleting(Me, New CarteraTituloValoracionRowChangeEvent(CType(e.Row,CarteraTituloValoracionRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCarteraTituloValoracionRow(ByVal row As CarteraTituloValoracionRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CarteraTituloValoracionRow
        Inherits DataRow
        
        Private tableCarteraTituloValoracion As CarteraTituloValoracionDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCarteraTituloValoracion = CType(Me.Table,CarteraTituloValoracionDataTable)
        End Sub
        
        Public Property Escenario As String
            Get
                Return CType(Me(Me.tableCarteraTituloValoracion.EscenarioColumn),String)
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.EscenarioColumn) = value
            End Set
        End Property
        
        Public Property CodigoPortafolioSBS As String
            Get
                Return CType(Me(Me.tableCarteraTituloValoracion.CodigoPortafolioSBSColumn),String)
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.CodigoPortafolioSBSColumn) = value
            End Set
        End Property
        
        Public Property FechaValoracion As Decimal
            Get
                Return CType(Me(Me.tableCarteraTituloValoracion.FechaValoracionColumn),Decimal)
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.FechaValoracionColumn) = value
            End Set
        End Property
        
        Public Property NumeroTitulo As Decimal
            Get
                Return CType(Me(Me.tableCarteraTituloValoracion.NumeroTituloColumn),Decimal)
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.NumeroTituloColumn) = value
            End Set
        End Property
        
        Public Property SecuenciaValorizacion As Decimal
            Get
                Return CType(Me(Me.tableCarteraTituloValoracion.SecuenciaValorizacionColumn),Decimal)
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.SecuenciaValorizacionColumn) = value
            End Set
        End Property
        
        Public Property ValorCausadoOriginal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorCausadoOriginalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorCausadoOriginalColumn) = value
            End Set
        End Property
        
        Public Property ValorCausadoLocal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorCausadoLocalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorCausadoLocalColumn) = value
            End Set
        End Property
        
        Public Property VPNOriginal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.VPNOriginalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.VPNOriginalColumn) = value
            End Set
        End Property
        
        Public Property VPNLocal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.VPNLocalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.VPNLocalColumn) = value
            End Set
        End Property
        
        Public Property Estado As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.EstadoColumn) = value
            End Set
        End Property
        
        Public Property IndicaContabilidad As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.IndicaContabilidadColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.IndicaContabilidadColumn) = value
            End Set
        End Property
        
        Public Property ValorTIROriginal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorTIROriginalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorTIROriginalColumn) = value
            End Set
        End Property
        
        Public Property ValorTIRLocal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorTIRLocalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorTIRLocalColumn) = value
            End Set
        End Property
        
        Public Property ValorTIR360 As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorTIR360Column),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorTIR360Column) = value
            End Set
        End Property
        
        Public Property DuracionSuperBancaria As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.DuracionSuperBancariaColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.DuracionSuperBancariaColumn) = value
            End Set
        End Property
        
        Public Property DuracionHeinsohn As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.DuracionHeinsohnColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.DuracionHeinsohnColumn) = value
            End Set
        End Property
        
        Public Property ValorUnidad As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorUnidadColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorUnidadColumn) = value
            End Set
        End Property
        
        Public Property Cantidad As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.CantidadColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.CantidadColumn) = value
            End Set
        End Property
        
        Public Property DuracionModificada As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.DuracionModificadaColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.DuracionModificadaColumn) = value
            End Set
        End Property
        
        Public Property Convexidad As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ConvexidadColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ConvexidadColumn) = value
            End Set
        End Property
        
        Public Property EstadoValoracion As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.EstadoValoracionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.EstadoValoracionColumn) = value
            End Set
        End Property
        
        Public Property ValorInteresesOriginal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorInteresesOriginalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorInteresesOriginalColumn) = value
            End Set
        End Property
        
        Public Property ValorInteresesLocal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorInteresesLocalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorInteresesLocalColumn) = value
            End Set
        End Property
        
        Public Property Margen As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.MargenColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.MargenColumn) = value
            End Set
        End Property
        
        Public Property ValorNominalMonedaOrigen As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaOrigenColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaOrigenColumn) = value
            End Set
        End Property
        
        Public Property ValorNominalMonedaLocal As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaLocalColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaLocalColumn) = value
            End Set
        End Property
        
        Public Property TIR360 As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.TIR360Column),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.TIR360Column) = value
            End Set
        End Property
        
        Public Property TasaEfectivaDiaria As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.TasaEfectivaDiariaColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.TasaEfectivaDiariaColumn) = value
            End Set
        End Property
        
        Public Property InteresesCorridos As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.InteresesCorridosColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.InteresesCorridosColumn) = value
            End Set
        End Property
        
        Public Property MetodoValoracion As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.MetodoValoracionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.MetodoValoracionColumn) = value
            End Set
        End Property
        
        Public Property UsuarioCreacion As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.UsuarioCreacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.UsuarioCreacionColumn) = value
            End Set
        End Property
        
        Public Property FechaCreacion As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.FechaCreacionColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.FechaCreacionColumn) = value
            End Set
        End Property
        
        Public Property HoraCreacion As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.HoraCreacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.HoraCreacionColumn) = value
            End Set
        End Property
        
        Public Property Host As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.HostColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.HostColumn) = value
            End Set
        End Property
        
        Public Property NumeroAsiento As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.NumeroAsientoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.NumeroAsientoColumn) = value
            End Set
        End Property
        
        Public Property FechaAsiento As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.FechaAsientoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.FechaAsientoColumn) = value
            End Set
        End Property
        
        Public Property CodigoMnemonico As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.CodigoMnemonicoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.CodigoMnemonicoColumn) = value
            End Set
        End Property
        
        Public Property Situacion As String
            Get
                Try 
                    Return CType(Me(Me.tableCarteraTituloValoracion.SituacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCarteraTituloValoracion.SituacionColumn) = value
            End Set
        End Property
        
        Public Function IsValorCausadoOriginalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorCausadoOriginalColumn)
        End Function
        
        Public Sub SetValorCausadoOriginalNull()
            Me(Me.tableCarteraTituloValoracion.ValorCausadoOriginalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorCausadoLocalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorCausadoLocalColumn)
        End Function
        
        Public Sub SetValorCausadoLocalNull()
            Me(Me.tableCarteraTituloValoracion.ValorCausadoLocalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsVPNOriginalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.VPNOriginalColumn)
        End Function
        
        Public Sub SetVPNOriginalNull()
            Me(Me.tableCarteraTituloValoracion.VPNOriginalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsVPNLocalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.VPNLocalColumn)
        End Function
        
        Public Sub SetVPNLocalNull()
            Me(Me.tableCarteraTituloValoracion.VPNLocalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.EstadoColumn)
        End Function
        
        Public Sub SetEstadoNull()
            Me(Me.tableCarteraTituloValoracion.EstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIndicaContabilidadNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.IndicaContabilidadColumn)
        End Function
        
        Public Sub SetIndicaContabilidadNull()
            Me(Me.tableCarteraTituloValoracion.IndicaContabilidadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorTIROriginalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorTIROriginalColumn)
        End Function
        
        Public Sub SetValorTIROriginalNull()
            Me(Me.tableCarteraTituloValoracion.ValorTIROriginalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorTIRLocalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorTIRLocalColumn)
        End Function
        
        Public Sub SetValorTIRLocalNull()
            Me(Me.tableCarteraTituloValoracion.ValorTIRLocalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorTIR360Null() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorTIR360Column)
        End Function
        
        Public Sub SetValorTIR360Null()
            Me(Me.tableCarteraTituloValoracion.ValorTIR360Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsDuracionSuperBancariaNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.DuracionSuperBancariaColumn)
        End Function
        
        Public Sub SetDuracionSuperBancariaNull()
            Me(Me.tableCarteraTituloValoracion.DuracionSuperBancariaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDuracionHeinsohnNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.DuracionHeinsohnColumn)
        End Function
        
        Public Sub SetDuracionHeinsohnNull()
            Me(Me.tableCarteraTituloValoracion.DuracionHeinsohnColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorUnidadNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorUnidadColumn)
        End Function
        
        Public Sub SetValorUnidadNull()
            Me(Me.tableCarteraTituloValoracion.ValorUnidadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.CantidadColumn)
        End Function
        
        Public Sub SetCantidadNull()
            Me(Me.tableCarteraTituloValoracion.CantidadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDuracionModificadaNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.DuracionModificadaColumn)
        End Function
        
        Public Sub SetDuracionModificadaNull()
            Me(Me.tableCarteraTituloValoracion.DuracionModificadaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsConvexidadNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ConvexidadColumn)
        End Function
        
        Public Sub SetConvexidadNull()
            Me(Me.tableCarteraTituloValoracion.ConvexidadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoValoracionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.EstadoValoracionColumn)
        End Function
        
        Public Sub SetEstadoValoracionNull()
            Me(Me.tableCarteraTituloValoracion.EstadoValoracionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorInteresesOriginalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorInteresesOriginalColumn)
        End Function
        
        Public Sub SetValorInteresesOriginalNull()
            Me(Me.tableCarteraTituloValoracion.ValorInteresesOriginalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorInteresesLocalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorInteresesLocalColumn)
        End Function
        
        Public Sub SetValorInteresesLocalNull()
            Me(Me.tableCarteraTituloValoracion.ValorInteresesLocalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMargenNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.MargenColumn)
        End Function
        
        Public Sub SetMargenNull()
            Me(Me.tableCarteraTituloValoracion.MargenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorNominalMonedaOrigenNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorNominalMonedaOrigenColumn)
        End Function
        
        Public Sub SetValorNominalMonedaOrigenNull()
            Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaOrigenColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorNominalMonedaLocalNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.ValorNominalMonedaLocalColumn)
        End Function
        
        Public Sub SetValorNominalMonedaLocalNull()
            Me(Me.tableCarteraTituloValoracion.ValorNominalMonedaLocalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTIR360Null() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.TIR360Column)
        End Function
        
        Public Sub SetTIR360Null()
            Me(Me.tableCarteraTituloValoracion.TIR360Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaEfectivaDiariaNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.TasaEfectivaDiariaColumn)
        End Function
        
        Public Sub SetTasaEfectivaDiariaNull()
            Me(Me.tableCarteraTituloValoracion.TasaEfectivaDiariaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsInteresesCorridosNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.InteresesCorridosColumn)
        End Function
        
        Public Sub SetInteresesCorridosNull()
            Me(Me.tableCarteraTituloValoracion.InteresesCorridosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMetodoValoracionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.MetodoValoracionColumn)
        End Function
        
        Public Sub SetMetodoValoracionNull()
            Me(Me.tableCarteraTituloValoracion.MetodoValoracionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioCreacionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.UsuarioCreacionColumn)
        End Function
        
        Public Sub SetUsuarioCreacionNull()
            Me(Me.tableCarteraTituloValoracion.UsuarioCreacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaCreacionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.FechaCreacionColumn)
        End Function
        
        Public Sub SetFechaCreacionNull()
            Me(Me.tableCarteraTituloValoracion.FechaCreacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsHoraCreacionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.HoraCreacionColumn)
        End Function
        
        Public Sub SetHoraCreacionNull()
            Me(Me.tableCarteraTituloValoracion.HoraCreacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsHostNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.HostColumn)
        End Function
        
        Public Sub SetHostNull()
            Me(Me.tableCarteraTituloValoracion.HostColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNumeroAsientoNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.NumeroAsientoColumn)
        End Function
        
        Public Sub SetNumeroAsientoNull()
            Me(Me.tableCarteraTituloValoracion.NumeroAsientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaAsientoNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.FechaAsientoColumn)
        End Function
        
        Public Sub SetFechaAsientoNull()
            Me(Me.tableCarteraTituloValoracion.FechaAsientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodigoMnemonicoNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.CodigoMnemonicoColumn)
        End Function
        
        Public Sub SetCodigoMnemonicoNull()
            Me(Me.tableCarteraTituloValoracion.CodigoMnemonicoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSituacionNull() As Boolean
            Return Me.IsNull(Me.tableCarteraTituloValoracion.SituacionColumn)
        End Function
        
        Public Sub SetSituacionNull()
            Me(Me.tableCarteraTituloValoracion.SituacionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CarteraTituloValoracionRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CarteraTituloValoracionRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CarteraTituloValoracionRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CarteraTituloValoracionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
